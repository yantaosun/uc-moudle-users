<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.uc.moudle.user.provider.mappers.UcMembersMapper">    <resultMap id="BaseResultMap" type="com.ucs.moudlecommon.domain.SysUsers">        <id column="id" property="id" jdbcType="INTEGER"/>        <result column="mem_regist_time" property="memRegistTime" jdbcType="TIMESTAMP"/>        <result column="mem_nickname" property="memNickname" jdbcType="VARCHAR"/>        <result column="mem_phone_number" property="memPhoneNumber" jdbcType="VARCHAR"/>        <result column="mem_avatar_url" property="memAvatarUrl" jdbcType="VARCHAR"/>        <result column="mem_email" property="memEmail" jdbcType="VARCHAR"/>        <result column="mem_type" property="memType" jdbcType="INTEGER"/>        <result column="mem_sex" property="memSex" jdbcType="INTEGER"/>        <result column="mem_last_login_time" property="memLastLoginTime" jdbcType="TIMESTAMP"/>        <result column="mem_regist_from" property="memRegistFrom" jdbcType="INTEGER"/>        <result column="mem_status" property="memStatus" jdbcType="INTEGER"/>        <result column="mem_wx_union_id" property="memWxUnionId" jdbcType="VARCHAR"/>        <result column="mem_wb_union_id" property="memWbUnionId" jdbcType="VARCHAR"/>        <result column="mem_qq_union_id" property="memQqUnionId" jdbcType="VARCHAR"/>        <result column="mem_github_union_id" property="memGithubUnionId" jdbcType="VARCHAR"/>        <result column="mem_location" property="memLocation" jdbcType="VARCHAR"/>        <result column="mem_pass_word" property="memPassWord" jdbcType="VARCHAR"/>    </resultMap>    <select id="findAll" resultType="SysUsers">        select * from sys_users m order by m.mem_regist_time desc limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}    </select>    <select id="findByParam" resultMap="BaseResultMap" parameterType="com.ucs.moudlecommon.params.sysuser.Find_UserInfoArg">        select * from sys_users m        <where>            <if test="arg.memQqUnionId != null">                m.mem_qq_union_id = #{arg.memQqUnionId}            </if>            <if test="arg.memWxUnionId != null">                m.mem_wx_union_id = #{arg.memWxUnionId}            </if>            <if test="arg.memWbUnionId != null">                m.mem_wb_union_id = #{arg.memWbUnionId}            </if>            <if test="arg.memGithubUnionId != null">                m.mem_github_union_id = #{arg.memGithubUnionId}            </if>            <if test="arg.memPhoneNumber != null">                m.mem_phone_number = #{arg.memPhoneNumber}            </if>        </where>        and m.mem_status = 0    </select>    <insert id="saveSysUsers" parameterType="SysUsers" useGeneratedKeys="true" keyProperty="id">        insert into sys_users(            mem_regist_time,mem_last_login_time,mem_type,            mem_regist_from,mem_status,mem_phone_number,            mem_wx_union_id,mem_wb_union_id,            mem_qq_union_id,mem_github_union_id,            mem_email,mem_nickname,mem_avatar_url,mem_sex)        values(            #{ucMember.memRegistTime},#{ucMember.memLastLoginTime},#{ucMember.memType},            #{ucMember.memRegistFrom},#{ucMember.memStatus},#{ucMember.memPhoneNumber},            #{ucMember.memWxUnionId},#{ucMember.memWbUnionId},#{ucMember.memQqUnionId},            #{ucMember.memGithubUnionId},#{ucMember.memEmail},#{ucMember.memNickname},            #{ucMember.memAvatarUrl},#{ucMember.memSex}        )    </insert>    <update id="updateMemberStatus" >        update uc_members m set m.mem_status = #{status} where  m.id = #{id}    </update></mapper>