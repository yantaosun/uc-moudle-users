package com.uc.moudle.user.provider.controller;import com.uc.moudle.user.api.enums.ErrorCode;import com.uc.moudle.user.api.exception.CommonBusinessException;import com.uc.moudle.user.api.exception.HttpRequestException;import com.uc.moudle.user.api.service.UserOperationService;import com.uc.moudle.user.provider.config.annotations.SkipSecretKey;import com.ucs.moudlecommon.domain.SysUsers;import com.ucs.moudlecommon.params.CommonParamsMoudle;import com.ucs.moudlecommon.params.sysuser.Find_UserInfoArg;import com.ucs.moudlecommon.params.sysuser.UserAndRolesInfo;import com.ucs.moudlecommon.response.BaseResponse;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletResponse;/** * @author 9527 * @ClassName UserSignUp * @Date 2020/1/20 * @Description TODO * @Version 1.0 */@Controller@RequestMapping("/user")public class UserInfoController {    private Logger logger = LoggerFactory.getLogger(UserInfoController.class);    @Autowired    private UserOperationService userOperationInterface;    @RequestMapping(value = "/findUserInfo")    @ResponseBody    @SkipSecretKey    public BaseResponse<SysUsers> findUserInfo(@RequestBody CommonParamsMoudle<Find_UserInfoArg> paramsMoudle, HttpServletResponse response){        logger.info("用户登录");        BaseResponse<SysUsers> resp = new BaseResponse();        try {            resp = userOperationInterface.findUserInfo(paramsMoudle.getExtra());        } catch (CommonBusinessException e) {            logger.error("userOperationBusiness -> githubCallback  error",e);            resp.setCode(e.getCode());            resp.setMessage(e.getMessage());        }catch (HttpRequestException e){            logger.error("userOperationBusiness -> githubCallback  error",e);            resp.setCode(e.getCode());            resp.setMessage(e.getMessage());        } catch (Exception e) {            logger.error("userOperationBusiness -> githubCallback  error",e);            resp.setCode(ErrorCode.RUNTIMEEXCEPTION.getCode());            resp.setMessage(e.getMessage());        }        return resp;    }    @RequestMapping(value = "/findUserRoleInfo")    @ResponseBody    @SkipSecretKey    public BaseResponse<UserAndRolesInfo> findUserRoleInfo(@RequestBody CommonParamsMoudle<Find_UserInfoArg> paramsMoudle, HttpServletResponse response){        logger.info("获取用户信息");        BaseResponse resp = new BaseResponse();        try {            resp = userOperationInterface.findUserAndRoleInfo(paramsMoudle.getExtra());        } catch (CommonBusinessException e) {            logger.error("userOperationBusiness -> findUserRoleInfo  error",e);            resp.setCode(e.getCode());            resp.setMessage(e.getMessage());        }catch (Exception e) {            logger.error("userOperationBusiness -> findUserRoleInfo  error",e);            resp.setCode(ErrorCode.RUNTIMEEXCEPTION.getCode());            resp.setMessage(e.getMessage());        }        return resp;    }}