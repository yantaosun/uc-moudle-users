package com.uc.moudle.user.provider.config.rocketmq;import org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyContext;import org.apache.rocketmq.client.consumer.listener.ConsumeConcurrentlyStatus;import org.apache.rocketmq.client.consumer.listener.MessageListenerConcurrently;import org.apache.rocketmq.common.message.MessageExt;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.List;/** * @author 9527 * @ClassName MessageListen * @Date 2020/1/21 * @Description TODO * @Version 1.0 */public class MessageListen implements MessageListenerConcurrently {    private Logger logger = LoggerFactory.getLogger(MessageListen.class);    private MessageProcessor messageProcessor;    public void setMessageProcessor(MessageProcessor messageProcessor) {        this.messageProcessor = messageProcessor;    }    @Override    public ConsumeConcurrentlyStatus consumeMessage(List<MessageExt> list, ConsumeConcurrentlyContext consumeConcurrentlyContext) {        logger.info("消费主题为："+consumeConcurrentlyContext.getMessageQueue().getTopic()+"的消息");        list.forEach(messageExt -> {            boolean result = messageProcessor.handle(messageExt);            logger.info("当前消息处理结果：" + result);        });        return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;    }}